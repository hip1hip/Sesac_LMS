spring:
  application:
    name: backend
    
  output:
    ansi:
      enabled: always

  security:
    basic:
      enabled: false

  jpa:
    generate-ddl: true
    show-sql: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: false
        default_schema: public  # 스키마 설정 추가
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/lms?characterEncoding=UTF-8
    username: postgres
    password: popost

  data:
    redis:
      host: 127.0.0.1
      port: 6379
      password: redis

  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true

  kafka:
    bootstrap-servers: 172.16.6.79:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: enrollment-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false    # 수동 커밋 사용 (안정성을 위해)
      properties:
        spring.json.trusted.packages: "*"
    monitor:
      enabled: true
      check-interval: 60000       # 1분마다 체크
      lag-threshold: 1000         # Lag 임계값

  redis:
    data:
      redis:
        host: localhost
        port: 6379

server:
  port: 8081
#  servlet:
#    context-path: /api

my_value:
  key: "1111"

#LOGGING_LEVEL:
#  org:
#    springframework:
#      security: DEBUG